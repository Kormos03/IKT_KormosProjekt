import { useState } from "react";
import useAuth from "./useAuth";

export function AdminBookingNotReserved() {
    const { token, user,error, setToken, setUser, setError } = useAuth();
    const [date, setDate] = useState(new Date());
    const [timeStart, setTimeStart] = useState('');
    const [timeEnd, setTimeEnd] = useState('');
    const [bookingData, setBookingData] = useState([]);
    //I have to change the bookinData to the correct format
    //generated by ai   
    async function getAllNotReserved(e: any) {
        console.log('Name: ', user!.username);
       e.preventDefault();
        const startDate = new Date(date);
        const endDate = new Date(date);
        const start = timeStart.split(':');
        const end = timeEnd.split(':');
        startDate.setHours(parseInt(start[0]) + 1, parseInt(start[1]), 0);      //somehow the hours are not correct, so I have to add 1 to the hours
        endDate.setHours(parseInt(end[0]) + 1, parseInt(end[1]), 0);
        if (startDate >= endDate) {
            console.log('A kezdő időpontnak korábbinak kell lennie, mint a befejező időpont!');
            return;
        }
        const toSendStart = startDate.toISOString();
        const toSendEnd = endDate.toISOString();
        console.log('Start: ', toSendStart);
        console.log('End: ', toSendEnd);


        const bookingData = {
            admin: user!.admin,
            name: user!.username
        }
        if(!user || !user.username || typeof user.username !== 'string'){
            bookingData.name = '';
        }
        console.log('user: ', user)
        console.log(bookingData)
        const response = await fetch('http://localhost:3000/booking/not_reserved/', {
            method: 'GET',
            headers: {
                'Content-type': 'application/json',
                'Accept': 'application/json',
                'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify(bookingData),
        });
        if (!response.ok) {
            const errorObj = await response.json();
            console.log(errorObj);
            return;
        }
        console.log('response: ', response);
        const data = await response.json();
        setBookingData(data);
    }

    return (
        <>
        <div className="container login">
        <h1>Szabad időpontok kezelése</h1>
        {
            bookingData.map((booking: any) => {
                return (
                    <div key={booking.id}>
                        <p>{booking.name} - {booking.dateStart} - {booking.dateEnd}</p>
                    </div>
                )
            })
        }
        </div>
        </>
    )
}